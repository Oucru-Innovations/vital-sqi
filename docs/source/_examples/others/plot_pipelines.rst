
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples/others/plot_pipelines.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_others_plot_pipelines.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_others_plot_pipelines.py:


Exploiting Pipelines!
=====================

This example....

.. GENERATED FROM PYTHON SOURCE LINES 11-13

How pipelines should look like
------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 13-30

.. code-block:: default
   :lineno-start: 14


    # Create steps
    #step1 = Trim(start=5, end=5)
    #step2 = Unchanged(param1=x, param2=y)
    #step3 = LostConnection(param1=20, param2=30)

    # .. note: Similar to scikits pipeline which basically loops over
    #          steps and executes for each step the methods .fit and
    #          .transform.

    # Create pipeline
    #pipe = Pipeline(steps=[('step1', step1),
    #                       ('step2', step2),
    #                       ('step3', step3))

    # Data
    #data = pipe.fit_transform(data)








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download__examples_others_plot_pipelines.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipelines.py <plot_pipelines.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipelines.ipynb <plot_pipelines.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
